version: 2.1
jobs:
  build:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Build
          command: |
            echo "Build ok"
  test:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Test
          command: |
            echo "Test ok"
  analyse:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Analyse
          command: |
            echo "Analyse ok"

  deploy-infra-with-aws:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Infra - Enable trigger on S3 bucket
          command: |
            aws iam create-service-linked-role --aws-service-name es.amazonaws.com || exit 0
      - run:
          name: Infra - Build with AWS
          no_output_timeout: 30m
          command: |
            aws cloudformation deploy \
              --stack-name "aws-cvtheque-${CIRCLE_WORKFLOW_ID:0:8}" \
              --template-file .circleci/aws-infra/backend.yml \
              --parameter .circleci/aws-infra/backend.json \
              --capabilities "CAPABILITY_IAM" "CAPABILITY_NAMED_IAM" \
              --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:8}" \
              --region eu-west-3
      - run:
          name: Infra - Write in Ansible conf where is the dedicated FsCrawler server
          command: |
            FSCRAWLER_SERVER_IP=$(aws ec2 describe-instances \
              --filters "Name=tag:Name,Values=fscrawler-${CIRCLE_WORKFLOW_ID:0:8}" \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --region eu-west-3 \
              --output text)

            echo "${FSCRAWLER_SERVER_IP}" >> .circleci/ansible/hosts
            cat .circleci/ansible/hosts

            STR="s/fscrawler_host/${FSCRAWLER_SERVER_IP}/g"
            sed -i ${STR} .circleci/ansible/roles/fscrawler/files/_settings.json
            cat .circleci/ansible/roles/fscrawler/files/_settings.json
      - run:
          name: Infra - Write in FsCrawler conf where is the ESCluster
          command: |
            ES_DOMAIN_IP=$(aws es describe-elasticsearch-domain \
            --domain-name es-${CIRCLE_WORKFLOW_ID:0:8} \
            --region eu-west-3 \
            --output text \
            | awk -F"\t" '$1=="ENDPOINTS" {print $2}')

            STR="s/es_host/${ES_DOMAIN_IP}/g"
            sed -i ${STR} .circleci/ansible/roles/fscrawler/files/_settings.json
            cat .circleci/ansible/roles/fscrawler/files/_settings.json
      # Require tar for the persist_to_workspace step
      - run:
          name: Install librairies require to persist_on_workspace
          command: yum -y install tar gzip
      - persist_to_workspace:
          root: ~/
          paths:
            - project/.circleci/ansible/hosts
            - project/.circleci/ansible/roles/fscrawler/files/_settings.json

  configure-infra-with-ansible:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - add_ssh_keys:
          fingerprints: ["75:a6:c1:8f:9e:69:f2:20:36:80:38:a0:76:bb:04:60"]
      - run:
          name: Install Ansible
          command: apk add --update ansible
      - run:
          name: Install FsCrawler as a rest service and configure it
          command: |
            cd .circleci/ansible
            cat hosts
            ansible-playbook -i hosts configure-infra.yml

  verify:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Verify
          command: |
            echo "Verify ok"

  promote:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Promote
          command: |
            echo "Promote ok"

workflows:
  default:
    jobs:
      - build
      - test:
          requires: [build]
      - analyse:
          requires: [test]
      - deploy-infra-with-aws:
          requires: [analyse]
      - configure-infra-with-ansible:
          requires: [deploy-infra-with-aws]
      - verify:
          requires: [configure-infra-with-ansible]
      - promote:
          requires: [verify]
